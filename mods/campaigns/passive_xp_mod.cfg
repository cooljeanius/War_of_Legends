#textdomain wesnoth-War_of_Legends

[modification]
    id = knyght_wol_passive_xp_mod
    name = _ "War of Legends: Passive XP"
    description = _ "Your units will gain XP at the end of your turn."

    require_modification = yes
    type = hybrid

    [options]
        [slider]
            id=knyght_xp_per_turn_var
            default=5
            min=1
            # was 16 initially, but...well...things got out of hand
            max=8
            step=1
            name=_"XP Amount"
            description= _ "Amount of XP given to units on turn refresh"
        [/slider]
    [/options]

    [event]
        name=turn refresh,victory
        first_time_only=no

        [lua]
            code = <<

                local _ = wesnoth.textdomain "wesnoth-War_of_Legends"

                -- first, we take all xp_gainers
                -- which is all units of side 1 for this code
                local xp_gainers = wesnoth.units.find_on_map { side = wesnoth.current.side }

                local xp_to_add = wml.variables["knyght_xp_per_turn_var"]

                -- create a for loop  
                for i, xp_gainer in ipairs(xp_gainers) do
                    -- scroll to each one
                    -- commented out since it gets really effed up for large armies
                    -- wesnoth.interface.scroll_to_hex(xp_gainer.x, xp_gainer.y)

                    -- state how much XP you want to add
                    -- I am adding 5 XP per unit here
                    -- local xp_to_add = 5

                    if xp_to_add > 0 then
                        xp_gainer.experience = xp_gainer.experience + xp_to_add
                        wesnoth.interface.float_label(xp_gainer.x, xp_gainer.y, "<span color='cyan'>" .. tostring(_ "+%d XP"):format(xp_to_add) .. "</span>")
                        if xp_gainer.experience >= xp_gainer.max_experience then
                            xp_gainer:advance(true, true)
                        end
                    end
                end

            >>
        [/lua]
    [/event]
[/modification]
