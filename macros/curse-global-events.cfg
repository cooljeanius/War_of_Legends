#textdomain wesnoth-War_of_Legends

#display the status
#[event]
#    name=preload
#    first_time_only=no
#    [lua]
#        code=<<
#            local _ = wesnoth.textdomain "wesnoth-War_of_Legends"
#            local old_unit_status = wesnoth.theme_items.unit_status
#            function wesnoth.theme_items.unit_status()
#                local u = wesnoth.get_displayed_unit()
#                if not u then return {} end
#                local s = old_unit_status()
#                if u.status.cursed then
#                    table.insert(s, { "element", {
#                        image = "misc/curse.png",
#                        tooltip = _"cursed: This unit is cursed. This unit gets a 15% defence penalty on every terrain."
#                    } })
#                end
#                return s
#            end
#        >>
#    [/lua]
#[/event]

[event]
    name="preload"
    first_time_only=no
    [lua]
        code= << wesnoth.require "~add-ons/War_of_Legends/lua/theme.lua" >>
    [/lua]
    [lua]
        code= << wesnoth.require "~add-ons/War_of_Legends/lua/preload.lua" >>
    [/lua]
[/event]

# # # # # INFLICT THE CURSE # # # # #

# Remember if current attacker/defender is potential target of curse
[event]
    name=attack
    first_time_only=no
    id=WOL_curse_attack1
    [filter_attack]
        special_id=weapon_special_jinx
    [/filter_attack]
    [filter_second]
        canrecruit=no
        [not]
            status=WOL_curse
        [/not]
        [not]
            status=not_living
        [/not]
        [not]
            race=vampire
        [/not]
    [/filter_second]
    [set_variable]
        name=WOL_defender_cursable
        value=yes
    [/set_variable]
[/event]
[event]
    name=attack
    first_time_only=no
    id=WOL_curse_attack2
    [filter_second_attack]
        special_id=weapon_special_jinx
    [/filter_second_attack]
    [filter]
        canrecruit=no
        [not]
            status=WOL_curse
        [/not]
        [not]
            status=not_living
        [/not]
        [not]
            race=vampire
        [/not]
    [/filter]
    [set_variable]
        name=WOL_attacker_cursable
        value=yes
    [/set_variable]
[/event]

# Record that attacker/defender was target and was hit
[event]
    name=attacker hits
    first_time_only=no
    id=WOL_curse_attacker_1
    [filter_attack]
        special_id=weapon_special_jinx
    [/filter_attack]
    [filter_condition]
        [variable]
            name=WOL_defender_cursable
            equals=yes
        [/variable]
    [/filter_condition]

    [set_variable]
        name=WOL_curse_defender
        value=yes
    [/set_variable]
[/event]

[event]
    name=defender hits
    first_time_only=no
    id=WOL_curse_defender_1
    [filter_second_attack]
        special_id=weapon_special_jinx
    [/filter_second_attack]
    [filter_condition]
        [variable]
            name=WOL_attacker_cursable
            equals=yes
        [/variable]
    [/filter_condition]

    [set_variable]
        name=WOL_curse_attacker
        value=yes
    [/set_variable]
[/event]

# applies curse
[event]
    name=attack end
    first_time_only=no
    id=WOL_curse_attacker_2
    [filter_attack]
        special_id=weapon_special_jinx
    [/filter_attack]
    [filter_condition]
        [variable]
            name=WOL_curse_defender
            equals=yes
        [/variable]
    [/filter_condition]
    [WOL_add_curse]
        id=$second_unit.id
    [/WOL_add_curse]
    {CLEAR_VARIABLE WOL_curse_defender,WOL_defender_cursable}
[/event]
[event]
    name=attack end
    first_time_only=no
    id=WOL_curse_defender_2
    [filter_second_attack]
        special_id=weapon_special_jinx
    [/filter_second_attack]
    [filter_condition]
        [variable]
            name=WOL_curse_attacker
            equals=yes
        [/variable]
    [/filter_condition]
    [WOL_add_curse]
        id=$unit.id
    [/WOL_add_curse]
    {CLEAR_VARIABLE WOL_curse_attacker,WOL_attacker_cursable}
[/event]
# cleans variables in case curse did not happen
[event]
    name=attack end
    first_time_only=no
    id=WOL_curse_attacker_3
    [filter_attack]
        special_id=weapon_special_jinx
    [/filter_attack]
    [filter_condition]
        [variable]
            name=WOL_defender_cursable
            equals=yes
        [/variable]
    [/filter_condition]
    {CLEAR_VARIABLE WOL_defender_cursable}
[/event]
[event]
    name=attack end
    first_time_only=no
    id=WOL_curse_defender_3
    [filter_second_attack]
        special_id=weapon_special_jinx
    [/filter_second_attack]
    [filter_condition]
        [variable]
            name=WOL_attacker_cursable
            equals=yes
        [/variable]
    [/filter_condition]
    {CLEAR_VARIABLE WOL_attacker_cursable}
[/event]

# # # # # HEAL THE CURSE # # # # #

# event that switches the "cursed" variable to "no" if a unit is resting in a village
# and switches defense back to normal
[event]
    name=turn refresh
    first_time_only=no
    id=WOL_curse_turn_refresh_heal
    [filter_condition]
        [have_unit]
            status=WOL_curse
        [/have_unit]
    [/filter_condition]
    [WOL_remove_curse]
        status=WOL_curse
        [filter_location]
            terrain="*^V*"
        [/filter_location]
    [/WOL_remove_curse]
[/event]

# remove the curse on scenario win
[event]
    name=victory
    first_time_only=no
    id=WOL_curse_scenario_win_heal
    [filter_condition]
        [have_unit]
            status=WOL_curse
        [/have_unit]
    [/filter_condition]
    [WOL_remove_curse]
        status=WOL_curse
    [/WOL_remove_curse]
[/event]

# This next event removes the curse if a unit advances
[event]
    name=advance
    first_time_only=no
    id=WOL_curse_advance
    [filter]
        status=WOL_curse
    [/filter]
    [WOL_remove_curse]
        id=$unit.id
    [/WOL_remove_curse]
[/event]
